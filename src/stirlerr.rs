#![allow(
    dead_code,
    mutable_transmutes,
    non_camel_case_types,
    non_snake_case,
    non_upper_case_globals,
    unused_assignments,
    unused_mut
)]
extern "C" {
    fn log(_: libc::c_double) -> libc::c_double;
    fn lgammafn(_: libc::c_double) -> libc::c_double;
}
#[no_mangle]
pub unsafe extern "C" fn Rf_stirlerr(mut n: libc::c_double) -> libc::c_double {
    static mut sferr_halves: [libc::c_double; 31] = [
        0.0f64,
        0.1534264097200273452913848f64,
        0.0810614667953272582196702f64,
        0.0548141210519176538961390f64,
        0.0413406959554092940938221f64,
        0.03316287351993628748511048f64,
        0.02767792568499833914878929f64,
        0.02374616365629749597132920f64,
        0.02079067210376509311152277f64,
        0.01848845053267318523077934f64,
        0.01664469118982119216319487f64,
        0.01513497322191737887351255f64,
        0.01387612882307074799874573f64,
        0.01281046524292022692424986f64,
        0.01189670994589177009505572f64,
        0.01110455975820691732662991f64,
        0.010411265261972096497478567f64,
        0.009799416126158803298389475f64,
        0.009255462182712732917728637f64,
        0.008768700134139385462952823f64,
        0.008330563433362871256469318f64,
        0.007934114564314020547248100f64,
        0.007573675487951840794972024f64,
        0.007244554301320383179543912f64,
        0.006942840107209529865664152f64,
        0.006665247032707682442354394f64,
        0.006408994188004207068439631f64,
        0.006171712263039457647532867f64,
        0.005951370112758847735624416f64,
        0.005746216513010115682023589f64,
        0.005554733551962801371038690f64,
    ];
    let mut nn: libc::c_double = 0.;
    if n <= 15.0f64 {
        nn = n + n;
        if nn == nn as libc::c_int as libc::c_double {
            return sferr_halves[nn as libc::c_int as usize];
        }
        return lgammafn(n + 1.0f64) - (n + 0.5f64) * log(n) + n
            - 0.918938533204672741780329736406f64;
    }
    nn = n * n;
    if n > 500 as libc::c_int as libc::c_double {
        return (0.083333333333333333333f64 - 0.00277777777777777777778f64 / nn) / n;
    }
    if n > 80 as libc::c_int as libc::c_double {
        return (0.083333333333333333333f64
            - (0.00277777777777777777778f64 - 0.00079365079365079365079365f64 / nn) / nn)
            / n;
    }
    if n > 35 as libc::c_int as libc::c_double {
        return (0.083333333333333333333f64
            - (0.00277777777777777777778f64
                - (0.00079365079365079365079365f64 - 0.000595238095238095238095238f64 / nn) / nn)
                / nn)
            / n;
    }
    return (0.083333333333333333333f64
        - (0.00277777777777777777778f64
            - (0.00079365079365079365079365f64
                - (0.000595238095238095238095238f64 - 0.0008417508417508417508417508f64 / nn)
                    / nn)
                / nn)
            / nn)
        / n;
}
